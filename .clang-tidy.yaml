# MangoEditor - Clang-Tidy Configuration
# Version: 2.1.0
# Optimized for Bangladeshi C++ Developers

### Core Configuration ###
Checks: >
  -*,
  clang-analyzer-*,
  bugprone-*,
  performance-*,
  modernize-*,
  readability-*,
  cppcoreguidelines-*,
  misc-*,
  -modernize-use-trailing-return-type,
  -readability-magic-numbers,
  -cppcoreguidelines-avoid-magic-numbers,
  -cppcoreguidelines-pro-type-vararg,
  -bugprone-easily-swappable-parameters,
  -modernize-pass-by-value

WarningsAsErrors: '*'
HeaderFilterRegex: '(src|include|tests)/.*'
FormatStyle: file  # Uses .clang-format
SystemHeaders: false
AnalyzeTemporaryDtors: true

### Language Standards ###
CheckOptions:
  - key:             cppcoreguidelines-prefer-member-initializer.UseAssignment
    value:           true
  - key:             modernize-use-nodiscard.ReplacementString
    value:           '[[nodiscard]]'
  - key:             modernize-use-using.ReplacementString
    value:           'using'

### Naming Conventions ###
CheckOptions:
  # General Naming
  - key:             readability-identifier-naming.ClassCase
    value:           CamelCase
  - key:             readability-identifier-naming.StructCase
    value:           CamelCase
  - key:             readability-identifier-naming.FunctionCase
    value:           camelBack
  - key:             readability-identifier-naming.VariableCase
    value:           camelBack
  - key:             readability-identifier-naming.MemberCase
    value:           m_camelBack
  - key:             readability-identifier-naming.ConstexprVariableCase
    value:           CamelCase
  - key:             readability-identifier-naming.NamespaceCase
    value:           lower_case
  - key:             readability-identifier-naming.EnumCase
    value:           CamelCase
  - key:             readability-identifier-naming.EnumConstantCase
    value:           UPPER_CASE

  # Bangladesh-specific conventions
  - key:             readability-identifier-naming.BanglaFunctionPrefix
    value:           'bn_'  # For Bangla-specific functions
  - key:             readability-identifier-naming.BanglaClassPrefix
    value:           'Bangla'  # For Bangla-specific classes

### Qt Specific Checks ###
CheckOptions:
  - key:             readability-identifier-naming.QtClassCase
    value:           'Q[A-Z][a-zA-Z0-9]*'
  - key:             readability-identifier-naming.QtMethodCase
    value:           'qt_[a-z][a-zA-Z0-9]*'

### Performance Optimizations ###
CheckOptions:
  - key:             performance-no-int-to-ptr.WarningThreshold
    value:           1
  - key:             performance-unnecessary-value-param.AllowedTypes
    value:           'std::string_view;std::string'

### Modernization Checks ###
CheckOptions:
  - key:             modernize-use-auto.MinTypeNameLength
    value:           10
  - key:             modernize-avoid-c-arrays.AllowStringArrays
    value:           true

### Bangladesh-Specific Rules ###
BanglaSupport:
  EnableUnicodeCheck: true
  MaxBanglaCommentLength: 72  # Optimal for Bangla text
  BanglaFunctionPattern: 'bn_[a-z][a-zA-Z0-9]*'
  BanglaClassPattern: 'Bangla[A-Z][a-zA-Z0-9]*'

### Suppressions ###
Suppress: 
  - "readability-*" # Temporarily suppress for legacy code
  - "modernize-*"   # Temporarily suppress for legacy code

### Per-File Configurations ###
PerFileChecks:
  "src/bangla/*":
    Checks: >
      *,
      -performance-*,
      -modernize-use-auto
    CheckOptions:
      - key: readability-identifier-naming.FunctionCase
        value: 'bn_[a-z][a-zA-Z0-9]*'

  "include/qt/*":
    Checks: >
      *,
      -cppcoreguidelines-*,
      -modernize-*
    CheckOptions:
      - key: readability-identifier-naming.ClassCase
        value: 'Q[A-Z][a-zA-Z0-9]*'

### Usage Instructions ###
# How to run:
#   clang-tidy -p build/ compile_commands.json
#
# IDE Integration:
#   VS Code: Use clang-tidy extension
#   Qt Creator: Enable in Analyze > Clang-Tidy
#
# Bangladesh Dev Tips:
#   - Use UTF-8 encoding for Bangla comments
#   - Prefix Bangla-specific code with 'bn_' or 'Bangla'
